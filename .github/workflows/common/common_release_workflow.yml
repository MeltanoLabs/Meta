name: Publish GitHub Release to PyPI (MeltanoLabs)

# This workflow executes upon the publishing of a release in GitHub. This does not run on draft releases.
#
# Assumptions:
#
# 1. The repo is a python project which can be deployed using the Python version below noted in `python-version: __`.
# 2. The `pyproject.toml` file should declare `version = 0.0.0` in deference of dynamic versioning.
# 3. The release title should be in the semvar format (`vX.Y.Z`)
# 4. The repo secrets should declare (or have access to) the following env vars / secrets:
#    1. TEST_PYPI_TOKEN - A token to use for test publish.
#    2. PYPI_TOKEN      - A token to use for actual publish.
#
# Other notes:
#
# - Unless you block the hotkey, you browser will likely interpret "Ctrl+Enter" as "Publish" and not "Save Draft",
#   even if you are editing an existing draft.
# - The text copy of Release Notes can freely be edited after publish, with no impact on the publish process and without
#   risk of accidentally republishing.
# - PyPi will only accept each semvar increment once, but failures to publish can be freely retried, and you can yank
#   and release a patch on top if needed.

on:
  release:
    types: [published]

jobs:
  build_deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
    - name: Build package
      run: |
        poetry self add "poetry-dynamic-versioning[plugin]"
        poetry config repositories.testpypi https://test.pypi.org/legacy/
        poetry dynamic-versioning --no-cache
        poetry build
    - name: Upload wheel to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: dist/*.whl
        tag: ${{ github.ref }}
        overwrite: true
        file_glob: true
    - name: Deploy to PyPI
      run: |
        poetry publish -r testpypi -u "__token__" -p "${{ secrets.TEST_PYPI_TOKEN }}"
        poetry publish -u "__token__" -p "${{ secrets.PYPI_TOKEN }}"
